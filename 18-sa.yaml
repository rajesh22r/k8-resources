apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
  name: secret-reader
  namespace: expense

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: expense
  name: secret-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"] #access only to pod
  verbs: ["get", "watch", "list"] #actions allowed

---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "suresh" to read pods in the "expense" namespace.
# You need to already have a Role named "expense-trainee" in that namespace.
kind: RoleBinding
metadata:
  name: secret-reader
  namespace: expense
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: secret-reader # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: secret-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  ServiceAccountName: secret-reader
  containers:
  # docker run -d --name nginx nginx
  - name: nginx
    image: nginx
